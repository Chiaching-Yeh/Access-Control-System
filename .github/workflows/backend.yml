name: Deploy Backend

on:
  push:
    paths:
      - 'acs-backend/**'  # 只要 backend 資料夾有變更，就觸發這個 workflow
      - '.github/workflows/backend.yml'   # 或者這個 workflow 檔案本身有變更
    branches: [main] # 限定 main 分支

jobs:
  deploy-backend:
    runs-on: ubuntu-latest # 在 GitHub 提供的 Ubuntu runner 上執行

    steps:
      - name: Checkout source
        uses: actions/checkout@v3 # 把 GitHub Repo 的程式碼抓下來到 runner 上

      - name: Set up Google Cloud SDK # 設定 GCP 專案 ID（來自 GitHub Secret）
        uses: google-github-actions/setup-gcloud@v1 # 使用 GCP 服務帳號金鑰登入（JSON）
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: Authenticate Docker with Artifact Registry
        run: gcloud auth configure-docker us-west1-docker.pkg.dev # 設定 Docker 可以登入 GCP 的 Artifact Registry，用來推送 image

      - name: Build and Push Backend Docker Image  # 使用 backend 的 Dockerfile 打包 image，tag 成 artifact registry 格式，推送到 Artifact Registry，給 VM 拉取用
        run: |
          docker build -t ${{ secrets.DOCKER_REGISTRY }}/acs-backend ./acs-backend  
          docker push ${{ secrets.DOCKER_REGISTRY }}/acs-backend

      - name: SSH and Deploy Backend on VM
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VM_HOST }}   # GCP VM 的外部 IP
          username: ${{ secrets.VM_USER }}  # 登入使用者帳號
          key: ${{ secrets.VM_SSH_KEY }}  # 對應的 SSH 私鑰（貼在 GitHub Secret）
          # 從 Artifact Registry 拉下最新 backend image， # 使用 docker-compose 重新啟動 backend 服務（只更新 backend，不動其他）
          script: |
            docker pull ${{ secrets.DOCKER_REGISTRY }}/acs-backend
            docker-compose -f ~/Access-Control-System/docker-compose.yml up -d backend