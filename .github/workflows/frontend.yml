name: Deploy Frontend

on:
  workflow_dispatch:
  push:
    paths:
      - 'acs-frontend/**'
      - '.github/workflows/frontend.yml'
    branches: [main]

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Clean Docker Build Cache In Runner
        run: |
          echo "Cleaning up Docker resources..."
          docker system prune -af
          docker builder prune -af
          echo "Docker resources cleaned."

      - name: Debug - List current directory and check required files
        run: |
          echo "=== Current working directory ==="
          pwd
          echo "=== List all files in current directory ==="
          ls -la
          echo "=== List all files recursively ==="
          find . -type f -name "*.sh" -o -name "*.conf" -o -name "Dockerfile*" | head -20
          echo "=== Check for required files ==="
          echo "Checking for default.conf:"
          find . -name "default.conf" -type f || echo "❌ default.conf NOT FOUND"
          echo "=== Show dockerfile build context ==="
          ls -la ./acs-frontend/ || echo "acs-frontend directory not found"

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker to use Artifact Registry
        run: gcloud auth configure-docker us-west1-docker.pkg.dev

      - name: Build and Push Frontend Docker Image
        run: |
          echo "🛠️ Build and push with fixed tag: frontend"
          docker build \
          --no-cache \
          -t ${{ secrets.DOCKER_REGISTRY }}/acs-frontend:latest \
          -f ./acs-frontend/Dockerfile \
          ./acs-frontend
          docker push ${{ secrets.DOCKER_REGISTRY }}/acs-frontend:latest
          echo "✅ Image pushed: ${{ secrets.DOCKER_REGISTRY }}/acs-frontend:latest"

      - name: SSH to VM via gcloud and deploy frontend
        env:
          VM_SSH_KEY: ${{ secrets.VM_SSH_KEY }}
          VM_HOST: ${{ secrets.VM_HOST }}
          VM_USER: ${{ secrets.VM_USER }}
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
        run: |
          echo "🔐 將私鑰寫入 SSH 金鑰檔"
          mkdir -p ~/.ssh
          echo "$VM_SSH_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
      
          echo "🔐 加入 VM 到 known_hosts（避免首次連線提示）"
          ssh-keyscan -H $VM_HOST >> ~/.ssh/known_hosts
      
          echo "🔁 開始登入並執行部署腳本"
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no $VM_USER@$VM_HOST << 'EOF'
          
          echo '🔁 [0/4] 清除 VM 上 Docker 快取'
#          docker system prune -af
#          docker builder prune -af
          
          echo '🔁 [1/4] 切換至專案資料夾 ~/Access-Control-System'
          cd ~/Access-Control-System && pwd && ls -la
          
          echo '🔁 [2/4] Docker pull 最新映像（固定標記 latest）'
          docker pull us-west1-docker.pkg.dev/access-control-system-461910/access-control-registry/acs-frontend:latest || { echo '❌ Pull 失敗'; exit 1; }
          
          echo '🔁 [3/4] 檢查 docker-compose.yml 是否存在'
          ls -l docker-compose.yml || echo '❌ 找不到 docker-compose.yml'
          
          echo '🔁 [4/4] 執行 docker compose up -d --no-build frontend'
          docker compose up -d --no-build frontend
          
          echo '✅ 部署完成'
          EOF
