name: Deploy Frontend

on:
  workflow_dispatch:
  push:
    paths:
      - 'acs-frontend/**'
      - '.github/workflows/frontend.yml' #test
    branches: [main]

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Force Clear Docker Cache
        run: docker system prune -af
        # 確保清除所有快取

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker to use Artifact Registry
        run: gcloud auth configure-docker us-west1-docker.pkg.dev
        # 在 GitHub Actions 的 Runner 環境（Ubuntu VM）上執行的。
        # 這樣 runner 在 build image + docker push 到 GCP 時才會帶上 gcloud 身份認證。

      - name: Build and Push Frontend Docker Image
        run: |
          docker build --build-arg CACHE_BREAKER=$(date +%s) --no-cache -t ${{ secrets.DOCKER_REGISTRY }}/acs-frontend -f ./acs-frontend/Dockerfile .
          docker push ${{ secrets.DOCKER_REGISTRY }}/acs-frontend

      - name: Tag Latest Image
        run: |
          docker tag ${{ secrets.DOCKER_REGISTRY }}/acs-frontend ${{ secrets.DOCKER_REGISTRY }}/acs-frontend:latest
          docker push ${{ secrets.DOCKER_REGISTRY }}/acs-frontend:latest

      - name: SSH and Deploy frontend on VM
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            gcloud auth configure-docker us-west1-docker.pkg.dev  
            docker-compose -f ~/Access-Control-System/docker-compose.yml pull frontend
            echo "Building frontend"
            docker-compose -f ~/Access-Control-System/docker-compose.yml up frontend

          # 部署目標的 GCP VM 裡面執行的指令
          # 改寫 那台 VM 的 ~/.docker/config.json，讓 VM 上的 Docker pull 時知道用 gcloud 當認證工具
          # VM 執行 docker pull 時才能取得私有的 GCP Artifact Registry 映像